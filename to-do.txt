***Mainly front end stuff***

Redirect back to main page after submission on "EditSelf" page

Made EditUser page refresh or send back to "admin", or give some kind of feedback after clicking submit
Make EditUser page ask for confirmation before submitting a request to change an admin

Make a "search by tag" modal and link to it on the home page (tagSearchModal)

More gracefully handle failed login attempts
More gracefully handle error on the "/write" form

Add error validation to LoginForm and Register Form
Make register/sign in forms look better.

***Involves back end***

Add reference to comments under Article. Possibly rework calls to retrieve comments
in sampleDbOperations

Make it so admin can reset a password even without knowing the previous password
Handle failed password resets/login attempts better
Notify user of successful login
Notify user of failed login
Notify user of successful password change
notify user of failed password change
    track failed password attempts

username getting entered twice when using register? (username is automatically done by passport I think,
or passport-local-mongoose. Remove from front end submission and manual entry on route(s))

Clean up "post" implementation in front end. Could be more concise.
Anywhere that has the "postData" function can just be combined with
whatever function is under it (handleSubmit/login, etc)

Fix commentsRouter comment.create using the body username, and instead make it use the logged in user.

Rethink routes for manipulating comments. The most sensible is probably:
"[articleId]/comments", then do CRUD operations from there. Move app.use(commentsRouter) from 'app.js' to articlesRouter.js'?

Comments having error if commentBody is the same on different comments. This should
be able to be a duplicate field.

Make a basic "Error/this doesn't exist" page for server errors


***Dockerizing***

IF (and it's a big if) I decide to dockerize this project...

Example: https://github.com/docker/awesome-compose/tree/master/react-express-mongodb

Change root/username in yml file to be variables

Use a mounted folder for data so it persists: https://docs.docker.com/storage/volumes/#mount-a-host-directory-as-a-data-volume


***Before adding to portfolio***

Write, Read and update readme



***"Icing on the cake" ideas.***
These are not part of the MVP (Minimum Viable Product). Once the basics are all DONE and polished, these features can be added.
No working on these until the MVP is DONE.

--Write page changes
Add a "publish time" to the "Write" page to allow creators to choose when their articles go live
Add an "Edit" page to creators can change existing articles (that THEY wrote) (keep previous versions?) Use "PUT" route.
Add a spot for "highlight quote" for article, and render it in a large bold section aside on its display page
Instead of a thumbnail, allow uploading files (which would then need storage, adding complexity)

Email verification for user registration